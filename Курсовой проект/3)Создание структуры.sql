CREATE DATABASE YouTube;
USE YouTube;

CREATE TABLE videos (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  filename VARCHAR(255) NOT NULL,
  size INT NOT NULL,
  in_trends BOOLEAN,
  media_type_id INT UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);


CREATE TABLE users (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, 
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE,
  phone VARCHAR(100) NOT NULL UNIQUE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);  


CREATE TABLE videos_channels (
channel_id INT UNSIGNED NOT NULL,
video_id INT UNSIGNED NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP ,  
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  
PRIMARY KEY (channel_id, video_id));


CREATE TABLE channels_users (
channel_id INT UNSIGNED NOT NULL,
user_id INT UNSIGNED NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP ,  
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  
PRIMARY KEY (channel_id, user_id)
);


CREATE TABLE channels (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(150) NOT NULL UNIQUE ,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP ,  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 
);


CREATE TABLE comments (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  from_user_id INT UNSIGNED NOT NULL ,
  to_video_id INT UNSIGNED NOT NULL,
  body TEXT NOT NULL ,
  created_at DATETIME DEFAULT NOW() 
) ;


CREATE TABLE likes (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, 
  from_user_id INT UNSIGNED NOT NULL ,
  to_video_id INT UNSIGNED NOT NULL ,
  created_at DATETIME DEFAULT NOW()) ;


CREATE TABLE views (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  user_id INT UNSIGNED NOT NULL,
  video_id INT UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP);


CREATE TABLE media_types (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  name VARCHAR(255) NOT NULL UNIQUE ,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP ,  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 
) ;

ALTER TABLE videos_channels
ADD FOREIGN KEY (channel_id)
REFERENCES channels (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE videos_channels
ADD FOREIGN KEY (video_id)
REFERENCES videos (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE channels_users
ADD FOREIGN KEY (channel_id)
REFERENCES channels (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE channels_users
ADD FOREIGN KEY (user_id)
REFERENCES users (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE comments
ADD FOREIGN KEY (from_user_id)
REFERENCES users (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE comments
ADD FOREIGN KEY (to_video_id)
REFERENCES videos (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE likes
ADD FOREIGN KEY (from_user_id)
REFERENCES users (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE likes
ADD FOREIGN KEY (to_video_id)
REFERENCES videos (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE videos
ADD FOREIGN KEY (media_type_id)
REFERENCES media_types (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE views
ADD FOREIGN KEY (user_id)
REFERENCES users (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE views
ADD FOREIGN KEY (video_id)
REFERENCES videos (id)
ON DELETE CASCADE
ON UPDATE CASCADE;


